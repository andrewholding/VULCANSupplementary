{
    "collab_server" : "",
    "contents" : "library(tidyr)\nlibrary(dplyr)\nlibrary(MSnbase)\nlibrary(ggplot2)\nlibrary(limma)\n\nload(\"20161017_Holding_FM_RIME_TMT.RData\")\n\nmaPlot <- function(differentialExpressionResults, selectedGenes = NULL,\n                   xlab = expression(average~log[2](intensity)),\n                   ylab = expression(log[2](fold~change)),\n                   significanceLevel = 0.05,\n                   minLogFoldChangeForLabelling = 1.5,\n                   maxNumberLabelledProteins = 50,\n                   controlLogFoldChangeThreshold = -Inf,\n                   pointSize = 2.5) {\n  if (!\"logFCcontrol\" %in% colnames(differentialExpressionResults))\n    differentialExpressionResults$logFCcontrol <- Inf\n\n  differentialExpressionResults$group <-\n    ifelse(differentialExpressionResults$Gene %in% selectedGenes, 0,\n    ifelse(!is.na(differentialExpressionResults$adj.P.Val) & differentialExpressionResults$adj.P.Val <= significanceLevel & differentialExpressionResults$logFCcontrol >= controlLogFoldChangeThreshold, 1,\n    ifelse(!is.na(differentialExpressionResults$adj.P.Val) & differentialExpressionResults$adj.P.Val <= significanceLevel, 2,\n    ifelse(abs(differentialExpressionResults$logFC) >= minLogFoldChangeForLabelling & differentialExpressionResults$logFCcontrol >= controlLogFoldChangeThreshold, 3,\n    ifelse(abs(differentialExpressionResults$logFC) >= minLogFoldChangeForLabelling, 4,\n    ifelse(differentialExpressionResults$logFCcontrol >= controlLogFoldChangeThreshold, 5, 6))))))\n\n  # 0 - selected\n  # 1 - significant, specific\n  # 2 - significant, non-specific\n  # 3 - non-significant, large logfc, specific\n  # 4 - non-significant, large logfc, non-specific\n  # 5 - specific\n  # 6 - non-specific\n\n  differentialExpressionResults <- differentialExpressionResults %>% arrange(desc(group))\n\n  differentialExpressionResults$group <- factor(differentialExpressionResults$group, 0:6)\n\n  differentialExpressionResults <- differentialExpressionResults %>%\n    mutate(label = paste(\" \", Gene)) %>%\n    mutate(logFCcontrolAlpha = pmin(logFCcontrol, 2.0))\n\n  labelSubset <- bind_rows(\n    differentialExpressionResults %>%\n      filter(group != 0 & adj.P.Val <= significanceLevel) %>%\n      arrange(desc(abs(logFC))) %>%\n      slice(1:(maxNumberLabelledProteins / 2)),\n    differentialExpressionResults %>%\n      filter(group != 0 & abs(logFC) >= minLogFoldChangeForLabelling) %>%\n      arrange(desc(abs(logFC))) %>%\n      slice(1:maxNumberLabelledProteins)\n  ) %>%\n    unique %>%\n    slice(1:maxNumberLabelledProteins)\n\n\n  \n    if (maxNumberLabelledProteins == 0) labelSubset <- labelSubset %>% slice(0)\n \n  # plot <- ggplot(differentialExpressionResults, aes(x = AveExpr, y = logFC, colour = group, size = group, shape = group, alpha = logFCcontrolAlpha))\n  plot <- ggplot(differentialExpressionResults, aes(x = AveExpr, y = logFC, colour = group))+ coord_cartesian(ylim = c(-3.5,3.5))\n  plot <- plot + geom_hline(yintercept = 0, color=\"gray50\", size = 0.5)\n  plot <- plot + geom_point(alpha=0.75)\n  plot <- plot + geom_text(data = labelSubset, aes(label = label), hjust = 0, size = 3.5)\n  plot <- plot + geom_point(data = subset(differentialExpressionResults, group == 0), alpha = 0.7)\n  plot <- plot + geom_text(data = subset(differentialExpressionResults, group == 0), aes(label = label), hjust = 0, size = 4.0, alpha = 1)\n  plot <- plot + scale_colour_manual(values = c(\"green\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\"), drop = FALSE)\n  # plot <- plot + scale_colour_manual(values = c(\"blue\", \"deeppink3\", \"deeppink3\", \"gray50\", \"gray50\", \"gray50\", \"gray50\"), drop = FALSE)\n  # plot <- plot + scale_size_manual(values = c(1.2 * pointSize, pointSize, pointSize, 0.8 * pointSize, 0.8 * pointSize, 0.6 * pointSize, 0.6 * pointSize), drop = FALSE)\n  # plot <- plot + scale_shape_manual(values = c(16, 16, 1, 16, 1, 16, 1), drop = FALSE)\n  #plot <- plot + scale_alpha(range = c(0.2, 1.0))\n  plot <- plot + xlab(xlab)\n  plot <- plot + ylab(ylab)\n  plot <- plot + theme_bw()\n  plot <- plot + theme(\n    text = element_text(size = 14),\n    legend.position = \"none\"\n  )\n\n  save(differentialExpressionResults,file=\"~/Dropbox (Cambridge University)/Work/CRUK/Manuscripts/QRIME/analysis20160109/dER.rda\") \n\n  return(plot)\n}\n\ncontrastGroups <- c(\"ER 45min\", \"ER 0min\")\ncontrastName <- paste(contrastGroups, collapse = \" vs \")\n\nanalysis <- \"ExcludeMissingValues_QuantileNormalization\"\n\ndata <- combinedProteinData[[analysis]]\nexprs(data) <- log2(exprs(data))\n\nresults <- createContrastResults(\n  data,\n  fittedLinearModels[[analysis]],\n  fittedLinearModelsExcludingControls[[analysis]],\n  fittedContrasts[[analysis]],\n  runs,\n  c(\"ER 45min\", \"ER 0min\"),\n  controlGroup,\n  proteinInfo)\n\n\n\npdf(file = \"RedBlueMAPlot.pdf\",width=5, height=4)\nprint(maPlot(results,\n             significanceLevel = 0.5,\n             controlLogFoldChangeThreshold = 1.0,\n             minLogFoldChangeForLabelling = 1.5,\n             maxNumberLabelledProteins = 0,\n             pointSize = 1.5))\nload(\"~/Dropbox (Cambridge University)/Work/CRUK/Manuscripts/QRIME/analysis20160109/dER.rda\")\nas.numeric(differentialExpressionResults$group)%%2->differentialExpressionResults$group\ndev.off()\n\ntmp<-differentialExpressionResults\n\npdf(file = \"RedBlueDenstiyPlot.pdf\", width=4, height=3)\nplot(density(tmp$logFC[tmp$group==1]),col=\"blue\",ylab=\"Density\", xlab=\"Fold Change\", main=\"\", xlim=c(3,-3), lwd=2)\nlines(density(tmp$logFC[tmp$group==0]),col=\"red\",lwd=2)\ndev.off()\n\npdf(file = \"RedBlueBoxPlot.pdf\")\nboxplot(tmp$logFC[tmp$group==1],tmp$logFC[tmp$group==0],ylab=\"Fold Change\", names=c(\"Non-specific\",\"Specific\"), col=c(\"#0000FFAA\",\"#FF0000AA\"))\ndev.off()\n\nvar.test(tmp$logFC[tmp$group==1],tmp$logFC[tmp$group==0], alternative=\"less\")\n\n",
    "created" : 1486555743134.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4196378214",
    "id" : "C36DCA21",
    "lastKnownWriteTime" : 1486555977,
    "last_content_update" : 1486555977175,
    "path" : "~/Dropbox (Cambridge University)/Work/CRUK/Manuscripts/QRIME/analysis20160109/RedBlueMAPlot.R",
    "project_path" : "RedBlueMAPlot.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}